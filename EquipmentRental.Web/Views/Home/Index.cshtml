@model List<ProjectDBClassLibrary.Model.FeedBack>

@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-4">

    <!-- Welcome Image Banner -->
    <div class="row justify-content-center">
        <div class="col-md-10">
            <img src="~/images/postern.png" class="img-fluid rounded shadow mb-4" alt="Welcome Banner" />
        </div>
    </div>

    <!-- Quote Header -->
    <div class="text-center mb-5">
        <h2 class="fw-bold">We Don’t Just Rent Products, We Build Relationships!</h2>
        <p class="text-muted">Our customers trust us – here’s what they have to say.</p>
    </div>

    <!-- Feedback Carousel -->
    <div id="feedbackCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="5000">
        <div class="carousel-inner">
            @{
                int groupSize = 3;
                for (int i = 0; i < Model.Count; i += groupSize)
                {
                    var group = Model.Skip(i).Take(groupSize).ToList();
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row justify-content-center">
                            @foreach (var fb in group)
                            {
                                            <div class="col-md-4 mb-3">
                                                <div class="card h-100 shadow-sm border-0 p-3">
                                                    <div class="card-body">
                                                        <p class="card-text">"@fb.Comment"</p>
                                                    </div>
                                                    <div class="card-footer bg-transparent border-0">
                                                        <h6 class="mb-0 fw-bold">@fb.User.Fullname</h6>
                                                        <small class="text-muted">Rating: @fb.Rating / 5 ⭐</small>
                                                    </div>
                                                </div>
                                            </div>
                            }
                                </div>
                            </div>
                }
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#feedbackCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#feedbackCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>

   <!-- View All Feedback Button -->
<div class="text-center mt-4">
    <a href="/Home/AllFeedback" class="btn btn-outline-primary">View All Feedback</a>
</div>


    <!-- Service Quality Chart -->
    <h2 class="mt-5 mb-3">Service Quality Overview</h2>
    <canvas id="feedbackChart" height="100"></canvas>

</div>

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            const ctx = document.getElementById('feedbackChart').getContext('2d');

            const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AvgRatings.Keys));
            const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AvgRatings.Values));

            const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Average Rating',
                        data: data,
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 5
                        }
                    }
                }
            });
        </script>
}
