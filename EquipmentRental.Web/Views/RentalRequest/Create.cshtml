@model EquipmentRental.DataAccess.Models.RentalRequest

@{
    ViewData["Title"] = "Create Rental Request";
}

<h2>@ViewData["Title"]</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<div class="row">
    <div class="col-md-8">
        <form action="/RentalRequest/Create" method="post">
            @Html.AntiForgeryToken()
            <div class="text-danger">
                @Html.ValidationSummary(true)
            </div>
            
            <div class="mb-3">
                <label for="EquipmentId" class="form-label">Select Equipment</label>
                <select id="EquipmentId" name="EquipmentId" class="form-select" required>
                    <option value="">-- Select Equipment --</option>
                    @if (ViewBag.EquipmentList != null)
                    {
                        foreach (var equipment in ViewBag.EquipmentList)
                        {
                            if (Model != null && Model.EquipmentId == equipment.EquipmentId)
                            {
                                <option value="@equipment.EquipmentId" selected>@equipment.Name</option>
                            }
                            else
                            {
                                <option value="@equipment.EquipmentId">@equipment.Name</option>
                            }
                        }
                    }
                </select>
                <span class="text-danger">@Html.ValidationMessage("EquipmentId")</span>
            </div>

            <div class="mb-3">
                <label for="RentalStartDate" class="form-label">Start Date</label>
                <input type="date" id="RentalStartDate" name="RentalStartDate" value="@(Model?.RentalStartDate.ToString("yyyy-MM-dd"))" class="form-control" required />
                <span class="text-danger">@Html.ValidationMessage("RentalStartDate")</span>
            </div>

            <div class="mb-3">
                <label for="RentalEndDate" class="form-label">End Date</label>
                <input type="date" id="RentalEndDate" name="RentalEndDate" value="@(Model?.RentalEndDate.ToString("yyyy-MM-dd"))" class="form-control" required />
                <span class="text-danger">@Html.ValidationMessage("RentalEndDate")</span>
            </div>

            <div class="mb-3">
                <label for="TotalCost" class="form-label">Total Cost</label>
                <input type="number" id="TotalCost" name="TotalCost" value="@(Model?.TotalCost)" class="form-control" step="0.01" min="0" required />
                <span class="text-danger">@Html.ValidationMessage("TotalCost")</span>
            </div>

            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                <textarea id="Description" name="Description" class="form-control" rows="3">@(Model?.Description)</textarea>
                <span class="text-danger">@Html.ValidationMessage("Description")</span>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Submit Request</button>
                <a href="/RentalRequest" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log("Document ready - Rental Request form");
            
            // Debug form submission
            $("form").on("submit", function(e) {
                console.log("Rental Request form submitted");
                
                // Log form data
                var formData = $(this).serializeArray();
                $.each(formData, function(i, field) {
                    console.log(field.name + ": " + field.value);
                });
            });

            // Calculate total cost when dates change
            $("#RentalStartDate, #RentalEndDate, #EquipmentId").on("change", function() {
                calculateTotalCost();
            });

            function calculateTotalCost() {
                var equipmentId = $("#EquipmentId").val();
                var startDate = new Date($("#RentalStartDate").val());
                var endDate = new Date($("#RentalEndDate").val());
                
                if (equipmentId && !isNaN(startDate) && !isNaN(endDate) && endDate >= startDate) {
                    // Find the selected equipment's price
                    var price = 0;
                    @if (ViewBag.EquipmentList != null) {
                        <text>
                        var equipmentList = [
                            @foreach (var equipment in ViewBag.EquipmentList) {
                                <text>{id: @equipment.EquipmentId, price: @equipment.RentalPrice},</text>
                            }
                        ];
                        
                        var selectedEquipment = equipmentList.find(function(e) { return e.id == equipmentId; });
                        if (selectedEquipment) {
                            price = selectedEquipment.price;
                        }
                        </text>
                    }
                    
                    // Calculate days difference
                    var diffTime = Math.abs(endDate - startDate);
                    var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1; // Include both start and end days
                    
                    // Calculate total cost
                    var totalCost = price * diffDays;
                    $("#TotalCost").val(totalCost.toFixed(2));
                }
            }
        });
    </script>
}
