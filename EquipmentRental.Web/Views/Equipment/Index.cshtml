@model List<EquipmentRental.DataAccess.Models.Equipment>
@using Microsoft.AspNetCore.Authorization
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Equipment Management";
    var isManagerOrAdmin = HttpContextAccessor.HttpContext.User.IsInRole("Administrator") || 
                         HttpContextAccessor.HttpContext.User.IsInRole("Manager") ||
                         HttpContextAccessor.HttpContext.User.IsInRole("Admin");
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Equipment Inventory</h2>
    @if (isManagerOrAdmin)
    {
        <a href="/Equipment/Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New Equipment
        </a>
    }
</div>

<!-- Alerts for feedback messages -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Search and Filter Panel -->
<div class="card mb-4">
    <div class="card-header bg-light">
        <h5 class="mb-0">Search & Filter</h5>
    </div>
    <div class="card-body">
        <form action="/Equipment" method="get" class="row g-3">
            <div class="col-md-5">
                <label for="search" class="form-label">Search</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-search"></i></span>
                    <input type="text" id="search" name="search" value="@Context.Request.Query["search"]" class="form-control" placeholder="Search by name or description..." />
                </div>
            </div>
            <div class="col-md-4">
                <label for="categoryId" class="form-label">Category</label>
                <select id="categoryId" name="categoryId" class="form-select">
                    <option value="">-- All Categories --</option>
                    @foreach (var cat in ViewBag.Categories)
                    {
                        if (Context.Request.Query["categoryId"] == cat.CategoryId.ToString())
                        {
                            <option value="@cat.CategoryId" selected>@cat.CategoryName</option>
                        }
                        else
                        {
                            <option value="@cat.CategoryId">@cat.CategoryName</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-filter"></i> Apply Filters
                </button>
                <a href="/Equipment" class="btn btn-outline-secondary">
                    <i class="bi bi-x-circle"></i> Clear
                </a>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-light">
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Description</th>
                <th>Rental Price</th>
                <th>Availability</th>
                <th>Condition</th>
                @if (isManagerOrAdmin)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td><strong>@item.Name</strong></td>
                        <td>@item.Category?.CategoryName</td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.Description))
                            {
                                @(item.Description.Length > 50 ? item.Description.Substring(0, 47) + "..." : item.Description)
                            }
                            else
                            {
                                <span class="text-muted">No description</span>
                            }
                        </td>
                        <td>@item.RentalPrice.ToString("C")</td>
                        <td>
                            @switch (item.AvailabilityStatus)
                            {
                                case "Available":
                                    <span class="badge bg-success">Available</span>
                                    break;
                                case "Reserved":
                                    <span class="badge bg-warning text-dark">Reserved</span>
                                    break;
                                case "In Use":
                                    <span class="badge bg-danger">In Use</span>
                                    break;
                                case "Maintenance":
                                    <span class="badge bg-secondary">Maintenance</span>
                                    break;
                                default:
                                    <span class="badge bg-light text-dark">@item.AvailabilityStatus</span>
                                    break;
                            }
                        </td>
                        <td>@item.ConditionStatus</td>
                        @if (isManagerOrAdmin)
                        {
                            <td>
                                <div class="btn-group">
                                    <a href="/Equipment/Edit/@item.EquipmentId" class="btn btn-sm btn-outline-primary" title="Edit">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <form action="/Equipment/Delete/@item.EquipmentId" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this equipment? This action cannot be undone.');">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="@(isManagerOrAdmin ? 7 : 6)" class="text-center py-4">
                        <div class="alert alert-info mb-0">
                            <i class="bi bi-info-circle me-2"></i> No equipment found matching your search criteria.
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
