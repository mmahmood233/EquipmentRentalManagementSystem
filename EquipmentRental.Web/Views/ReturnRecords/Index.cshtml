@model IEnumerable<EquipmentRental.DataAccess.Models.ReturnRecord>

@{
    ViewData["Title"] = "Equipment Return Records";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>@ViewData["Title"]</h2>
        @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Process Equipment Return
            </a>
        }
    </div>
    
    <!-- Search and Filter Panel -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">Search & Filter</h5>
        </div>
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="search" class="form-label">Search</label>
                    <input type="text" class="form-control" id="search" name="search" value="@ViewBag.CurrentSearch" placeholder="Equipment name, notes...">
                </div>
                <div class="col-md-3">
                    <label for="condition" class="form-label">Condition</label>
                    <select class="form-select" id="condition" name="condition">
                        <option value="">All Conditions</option>
                        @foreach (var condition in ViewBag.Conditions ?? new List<string>())
                        {
                            <option value="@condition" selected="@(condition == ViewBag.CurrentCondition ? true : false)">@condition</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="fromDate" class="form-label">From Date</label>
                    <input type="date" class="form-control" id="fromDate" name="fromDate" value="@ViewBag.FromDate">
                </div>
                <div class="col-md-2">
                    <label for="toDate" class="form-label">To Date</label>
                    <input type="date" class="form-control" id="toDate" name="toDate" value="@ViewBag.ToDate">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <div class="d-grid gap-2 w-100">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle"></i> Clear
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            <i class="bi bi-info-circle"></i> No return records found matching your criteria.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Return ID</th>
                        <th>Equipment</th>
                        <th>Customer</th>
                        <th>Return Date</th>
                        <th>Condition</th>
                        <th>Late Fee</th>
                        <th>Additional Charges</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                #@item.ReturnRecordId
            </td>
            <td>
                @(item.RentalTransaction.Equipment?.Name ?? "Unknown")
            </td>
            <td>
                @(item.RentalTransaction.Customer?.FullName ?? "Unknown")
            </td>
            <td>
                @item.ActualReturnDate.ToString("MMM dd, yyyy")
            </td>
            <td>
                <span class="badge @GetConditionBadgeClass(item.ReturnCondition)">@item.ReturnCondition</span>
            </td>
            <td>
                $@item.LateReturnFee.ToString("F2")
            </td>
            <td>
                $@item.AdditionalCharges.ToString("F2")
            </td>
            <td>
                <div class="btn-group" role="group">
                    <a asp-action="Details" asp-route-id="@item.ReturnRecordId" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View
                    </a>

                    @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ReturnRecordId" class="btn btn-sm btn-outline-secondary">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.ReturnRecordId" class="btn btn-sm btn-outline-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    }
                </div>
            </td>
        </tr>
}
    </tbody>
</table>
        </div>
    }
</div>

@functions {
    string GetConditionBadgeClass(string condition)
    {
        return condition switch
        {
            "Excellent" => "bg-success",
            "Good" => "bg-info",
            "Fair" => "bg-warning",
            "Poor" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
